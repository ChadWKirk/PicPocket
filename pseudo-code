https://github.com/ChadWKirk/PicPocket.git

Concepts to brush up on:

React state (when it visibly updates, how to increment state using previous state)
JSON parsing (JSON.parse(), JSON.stringify(), response.json())
How to handle individual components in an array (ToDo tutorial)

Hosting and git workflow:

Complete app is on github in above link

Frontend is hosted on Netlify - Install Netlify CLI in client folder > npm run build > netlify deploy ./build > netlify deploy --prod ./build

Backend is hosted on Heroku - Install Heroku CLI in server folder > git add . > git commit -am "message" > git push heroku main

https://devcenter.heroku.com/articles/git

Have domain variable in App.js to toggle between using localhost for fetch routes or heroku domain for fetch routes to make it easier to develop

Email:

Email is done by Zoho and is connected to the https://picpoccket.com domain.

Image Selection (My Pics, My Likes):

- When single select, show edit stuff in form.
- Can mass delete and/or mass download.
- to handle form contents:

on checkbox click, if indexof object data is >= 0 (or .includes(object data) filter from array. if indexof <0 (-1) (or .!includes(object data), push object with info to an array.

On label click, reset array and then push label's info to array.

If massArr.current.length == 1, show that images info and preview and set submit/delete to that image

If array.length > 1, show stack of little images and say "Select a single image to edit it here"

- Keep array of what is selected in order to mass delete/download
- Have buttons that appear for delete/download when at least one image is selected

Google OAuth - https://console.cloud.google.com/ - https://youtu.be/TqlVP_IkS28 - https://www.npmjs.com/package/@react-oauth/google

Google / facebook sign in/up:

- post to /oauth/sign
- instead of username/pw, check for email/username
- if user with $and: email, username exists > run /signin stuff
- if doesn't exist > insert user as type: oauth, email: email, username: full name, pfp: google pic, no tokens because no need for email verify or pw change/forgot password > run /signup stuff (token)
- run dispatch thing that takes the token as payload
- navigate to either home page or sign up success page depending on res.json()
- don't display change password or change email if curUser.type === "oauth"

duplicate named images:

upload using multer instead of in front end with unsigned upload preset so you can input the random number so the initial public_id isn't a random string

for public id, put Math.floor(100000 + Math.random() {multiplied by} 900000) at the end of the name of the image

for example "lady" turns into "lady-245609" or "lady-333400"

when clicking image in gallery > go to /image/<public_id> without the "picpocket/" part > GET request to get image with req.params.public_id as public_id

sorting/filtering:

use all lowercase sort/filter values for example "atoz" instead of "aToz" to be able to allow for case insensitive sorting/filtering if user manually types the url

get cloudinary name and preset from back end instead of storing in env in front end (unsafe) - upload using multer to handle formData in express - https://cloudinary.com/documentation/upload_images https://medium.com/the-andela-way/how-to-upload-multiple-images-using-cloudinary-and-node-js-2f053b167b80 https://youtu.be/wIOpe8S2Mk8

Keep track of previous page (main page, most popular, likes page, etc. Not previous image page. So previous page before isShowingModal is true) and scroll position to send to image modal so when you click out of the modal it navigates to previous page while maintaining the scroll position

Keep track of scroll position to send to image modal so when you click out of the modal it navigates to previous page while maintaining the scroll position

Facebook OAuth - https://morioh.com/p/e37dfcf12462 - https://developers.facebook.com/docs/facebook-login/web - https://developers.facebook.com/docs/javascript/reference/FB.api/ - https://stackoverflow.com/questions/32436662/email-scope-is-not-working-which-is-used-in-fb-login

mkcert - use HTTPS on localhost to work with facebook OAuth (it doesn't work on http, only https). - install mkcert on both client and server, mkcert create-ca and mkcert create-cert on each, import the options in server.js and use https.createserver with those options, in react put https=true and ssl_cert_file path to crt file and ssl_key_file to key file path and set domain to https://localhost:5000 - https://ncoughlin.com/posts/https-on-localhost-with-react/#update-react-script

---

TASKS:

styling:

add browser comatibility

upload page - make it so dragging over upload form doesn't rerender image items causing them to flicker

navbar transition speed up

hamburger list fade out on unclick rather than instant

make mobile form title field 100% width when right under 900px in my pics

---

set up swiping motion for image modal

fix sign out (fb is undefined)

get heightmore to work on my pics page for ios

redesign mypics editor for mobile

update googleoauth to picpoccket url so it works in build

handle oauth "account already made with that email" error

put termly env vars in backend

---

How to manage images:

- host images on Cloudinary, fetch them from their API, store in MongoDB on upload so you can add likes and author.
- Can turn PNG or other lossless formats into jpg by just changing the extension on the url. get lastIndexOf "." in the URL and replace everything after it with "jpg". Use cloudinary scale terms and q_x term in url to scale down image dimensions and quality to further optimize them. https://cloudinary.com/documentation/image_optimization#how_to_optimize_image_sizing. search slice in mypics page for code. https://cloudinary.com/documentation/image_optimization. for upload page, need to wait until it is uploaded and secure url is generated before slicing.

SIGNED OUT BEHAVIOR:

    - need to make it so that when liking a pic if signed out, don't increase likes
    and don't add "undefined" to likedBy. And take to sign up page
    that also has a sign in link "Already a member? Sign In"

Search:

- make it so plural form gets searched when searching for something and vice versa. Example searching for "Cats" brings up "Cat" and vice versa

Upload Images:

- deal with image view page going to proper URL and using the given title and description etc.

- don't allow anything but numbers, letters (both cases), spaces, undercores, dashes and apostrophes on edit in title - turn title box red and have text in red by Title label "(Do Not Use Special Characters.)". If try to submit with special characters in title, show alert saying "Remove Special Characters From Title" and don't submit. - run a function in onChange of title input field that checks if anything other than allowed chars are in title and changes input css accordingly. - have if statement in submit function to check if title has special chars to run post request or show alert.

My Pics page:

- DEAL WITH EDIT SUCCESS/FAILURE
- under title, have gallery to show pics. have ability to sort pics just like in a search page
- have the ability to check off pictures for mass delete

Likes page:

- show liked pictures in a gallery like search page
- able to sort like search page
- able to search through liked images with little search bar to the right. automatically updates them without changing url
- able to check off multiple ones and click remove from likes with are you sure box
- able to click three dots icon on individual images and hit remove from likes with are you sure box

Image-View Page:

- need to make page user goes to when clicking on a picture
- will have title, like button, description, price, tags, add to cart button, buy now button and free download button
- Will have related images section under that main section detailed above
- When clicking a tag, it will go to /search/thatTag and pull up all images with that tag or word in title

Overlay tip - use pointer-events: none; on after pseudo element to make it click through so you can click the image and right click save as the image.

Sign up:

- signing up as new user works
- sometimes sign up confirm box doesn't sign users out
- sometimes after confirm box, account page is blank

- send authentication email

server:

- fix "can not read collection" error that you get sometimes when server loads. Something with database not being ready yet.

misc:

- need to hash passwords
